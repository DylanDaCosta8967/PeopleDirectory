@model PeopleDirectory.Models.PersonDirectoryModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "PeopleDirectory", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @if (ViewBag.message != null)
    {
        <div style="border:solid 1px black">
            @ViewBag.Message
        </div>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group" >
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.Gender, "Male") Male
            @Html.RadioButtonFor(model => model.Gender, "Female") Female
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="File" id="img" name="Image1" />
            @Html.EditorFor(model => model.ProfilePic, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientCountryId, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.CountryId != null)
            {
                @Html.DropDownListFor(model => model.ClientCountryId, @ViewBag.CountryId as SelectList, "Select Country", htmlAttributes: new { @class = "form-control" })
            }
            @Html.ValidationMessageFor(model => model.ClientCountryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientCityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ClientCityId, @ViewBag.CityId as SelectList, "Select City", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClientCityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.12.4.js"></script>
    <script language="javascript">

       
        $(document).ready(function ()
        {
            $("#ClientCountryId").change(function ()
            {
               
                var countryId = parseInt($("#ClientCountryId").val());
                if (!isNaN(countryId))
                {
                    var ddCity = $("#ClientCityId");
                    ddCity.empty();
                    ddCity.append($("<option></option>").val("Select City"));
                    
                    $.ajax(
                        {
                            url: "@Url.Action("GetCities", "PeopleDirectory")",
                            type: "Get",
                            data: {
                                ClientCountryID: countryId
                                  },
                            dataType: "json",
                            success: function (data)
                            {
                                $.each(data, function (i, val)
                                {
                                    ddCity.append(
                                        $("<option></option>").val(val.CityId).html(val.CityName)
                                    );
                                });
                            },
                            error: function ()
                            {
                                alert("Error!");
                            }
                        });
                }
            });
        });

      
    </script>
 
